displaycode off
setdatadir ../data
loaddatasets regression.xml
integer i k t level feature j fcount len
file infile
string dataset resultdir st type alg subdir reg read ntypes[250] 
real count[30] total[30]
= reg l2
= resultdir ../results
for k 1 4
  switch k
    case 1
      = alg softregtree-%reg%
      = subdir softtree-1
    case 2
      = alg softregtree-%reg%
      = subdir softtree-10
    case 3
      = alg softregtree-%reg%
      = subdir softtree-100
    case 4
      = alg softregtree-%reg%
      = subdir softtree-1000
  endswitch
  output %subdir%-reg-%reg%.txt
for i 1 29
  switch i
    case 1
      = dataset concrete
    case 2
      = dataset puma8fh
    case 3
      = dataset puma8nh
    case 4
      = dataset puma8fm
    case 5
      = dataset puma8nm
    case 6
      = dataset abalone
    case 7
      = dataset add10
    case 8
      = dataset boston
    case 9
      = dataset comp
    case 10
      = dataset bank32fh
    case 11
      = dataset bank32fm
    case 12
      = dataset bank32nh
    case 13
      = dataset bank32nm
    case 14
      = dataset bank8fh
    case 15
      = dataset bank8fm
    case 16
      = dataset bank8nh
    case 17
      = dataset bank8nm
    case 18
      = dataset kin32fh
    case 19
      = dataset kin32fm
    case 20
      = dataset kin32nh
    case 21
      = dataset kin32nm
    case 22
      = dataset kin8fh
    case 23
      = dataset kin8fm
    case 24
      = dataset kin8nh
    case 25
      = dataset kin8nm
    case 26
      = dataset puma32fh
    case 27
      = dataset puma32fm
    case 28
      = dataset puma32nh
    case 29
      = dataset puma32nm
  endswitch
  featurecount %dataset%
  = fcount %out2%
  for t 1 30
    = count[%t%] 0
    = total[%t%] 0
  endfor t
  = infile %resultdir%/%subdir%/%dataset%-%alg%.featurecount
    openfile infile r
    for t 1 10
      readfile infile read
      tokenize read ;
      = len %out1%
      if > len 0
        for j 1 %len%
          = ntypes[j] %aout1[j]%
        endfor j
        for j 1 %len%
          = st %ntypes[j]%
          tokenize st -
          = level %aout1[1]%
          = feature %aout1[2]%
          ++ count[%level%]
          += total[%level%] %feature%
        endfor j
      endif
    endfor t
    closefile infile
    = st %dataset%
    for t 1 30
      if > count[%t%] 0
        = st %st%_(%t%)_%total[t]/(count[t]*(fcount+1))%
      endif
    endfor t
    write %st%
endfor i
endfor k
output stdout
