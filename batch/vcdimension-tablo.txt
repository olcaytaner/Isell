displaycode off
displayresult off
setprecision 2
string resultdir dataset st st2 st3 st4 algorithm1 algorithm2 algorithm3 test type comparison
integer i j k p q win1 win2 win3 endj wins[2,3,3]
file outfile infile
os Linux
twotailed
= resultdir //root/results/vcdimension
= test ftest
= algorithm1 nopruning
= algorithm2 cvpruning
= algorithm3 srmpruning
for i 1 3  
  switch i
    case 1 
      = type univariate
      = endj 21
    case 2
      = type linear
      = endj 21
    case 3
      = type quadratic
      = endj 14
  endswitch
  output //root/tablo%i%.txt
  write \begin{table}
  write \begin{center}
  write \begin{tabular}{|l|rrr||rrr|}
  write \hline
  write Dataset_&_\multicolumn{3}{|c|}{Error}_&_\multicolumn{3}{|c|}{Complexity}_\\
  write \hline
  write _&_NOprune_&_CVPrune_&_SRMprune_&_NOprune_&_CVPrune_&_SRMprune_\\
  write \hline
  = infile //root/isell/twoclass.txt
  openfile infile r
  for k 1 2
    for p 1 3
      for q 1 3
        = wins[%k%,%p%,%q%] 0
      endfor q
    endfor p
  endfor k
  for j 1 %endj%
    readfile infile dataset
    = st %dataset%
    for k 1 2
      switch k
        case 1
          = comparison error
        case 2
          = comparison complexity
      endswitch
      meanvariance %resultdir%/%dataset%-%type%-%algorithm1%.%comparison%
      = st2 %out1%$\pm$%out2%
      meanvariance %resultdir%/%dataset%-%type%-%algorithm2%.%comparison%
      = st3 %out1%$\pm$%out2%
      meanvariance %resultdir%/%dataset%-%type%-%algorithm3%.%comparison%
      = st4 %out1%$\pm$%out2%
      = win1 0
      = win2 0
      = win3 0
      %test% %resultdir%/%dataset%-%type%-%algorithm1%.%comparison% %resultdir%/%dataset%-%type%-%algorithm2%.%comparison%
      if = out1 2
        += win1 1
        += wins[%k%,1,2] 1
      else
        if = out1 1
          += win2 1
          += wins[%k%,2,1] 1
        endif
      endif
      %test% %resultdir%/%dataset%-%type%-%algorithm1%.%comparison% %resultdir%/%dataset%-%type%-%algorithm3%.%comparison%
      if = out1 2
        += win1 1
        += wins[%k%,1,3] 1
      else
        if = out1 1
          += win3 1
          += wins[%k%,3,1] 1
        endif
      endif
      %test% %resultdir%/%dataset%-%type%-%algorithm2%.%comparison% %resultdir%/%dataset%-%type%-%algorithm3%.%comparison%
      if = out1 2
        += win2 1
        += wins[%k%,2,3] 1
      else
        if = out1 1
          += win3 1
          += wins[%k%,3,2] 1
        endif
      endif
      switch win1
        case 0
          = st %st%_&_%st2%_
        case 1
          = st %st%_&_{\em_%st2%}_
        case 2
          = st %st%_&_{\bf_%st2%}_
      endswitch
      switch win2
        case 0
          = st %st%_&_%st3%_
        case 1
          = st %st%_&_{\em_%st3%}_
        case 2
          = st %st%_&_{\bf_%st3%}_
      endswitch
      switch win3
        case 0
          = st %st%_&_%st4%_
        case 1
          = st %st%_&_{\em_%st4%}_
        case 2
          = st %st%_&_{\bf_%st4%}_
      endswitch
    endfor k
    write %st%\\
  endfor j  
  closefile infile
  write \hline
  write \end{tabular}
  write \begin{tabular}{|l|rrr|l|rrr|}
  write \hline
  write \multicolumn{4}{|c|}{Error}_&_\multicolumn{4}{|c|}{Complexity}_\\
  write \hline
  write _&_NO_&_CV_&_SRM_&_&_NO_&_CV_&_SRM_\\
  write \hline
  for j 1 3
    switch j
      case 1
        = st2 NO
      case 2
        = st2 CV
      case 3
        = st2 SRM
    endswitch
    = st _
    for k 1 2
      = st %st%_%st2%
      for p 1 3
        if != j %p%
          = st %st%_&_%wins[k,j,p]%
        else
          = st %st%_&_
        endif
      endfor p
      if == k 1
        = st %st%_&
      endif
    endfor k
    write %st%\\
  endfor j
  write \hline
  write \end{tabular}
  write \end{center}
  write \end{table}
endfor i
output stdout
